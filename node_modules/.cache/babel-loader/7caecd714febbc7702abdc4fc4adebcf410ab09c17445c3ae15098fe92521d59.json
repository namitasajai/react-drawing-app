{"ast":null,"code":"var _jsxFileName = \"/Users/namitasajai/Desktop/react-drawing-app/src/components/Canvas.js\",\n  _s = $RefreshSig$();\n// src/components/Canvas.js\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = ({\n  color,\n  width\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // Ensure the canvas element is present\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext('2d');\n      context.strokeStyle = color;\n      context.lineWidth = width;\n    }\n  }, [color, width]);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext('2d');\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      context.beginPath();\n      context.moveTo(offsetX, offsetY);\n      canvas.isDrawing = true;\n    }\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    const canvas = canvasRef.current;\n    if (canvas && canvas.isDrawing) {\n      const {\n        offsetX,\n        offsetY\n      } = nativeEvent;\n      const context = canvas.getContext('2d');\n      context.lineTo(offsetX, offsetY);\n      context.stroke();\n    }\n  };\n  const stopDrawing = () => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext('2d');\n      context.closePath();\n      canvas.isDrawing = false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"800\",\n    height: \"600\",\n    onMouseDown: startDrawing,\n    onMouseMove: draw,\n    onMouseUp: stopDrawing,\n    onMouseOut: stopDrawing,\n    style: {\n      border: '2px solid black'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","color","width","_s","canvasRef","canvas","current","context","getContext","strokeStyle","lineWidth","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","isDrawing","draw","lineTo","stroke","stopDrawing","closePath","ref","height","onMouseDown","onMouseMove","onMouseUp","onMouseOut","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/namitasajai/Desktop/react-drawing-app/src/components/Canvas.js"],"sourcesContent":["// src/components/Canvas.js\nimport React, { useRef, useEffect } from 'react';\n\nconst Canvas = ({ color, width }) => {\n    const canvasRef = useRef(null);\n\n    useEffect(() => {\n        // Ensure the canvas element is present\n        const canvas = canvasRef.current;\n        if (canvas) {\n            const context = canvas.getContext('2d');\n            context.strokeStyle = color;\n            context.lineWidth = width;\n        }\n    }, [color, width]);\n\n    const startDrawing = ({ nativeEvent }) => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n            const context = canvas.getContext('2d');\n            const { offsetX, offsetY } = nativeEvent;\n            context.beginPath();\n            context.moveTo(offsetX, offsetY);\n            canvas.isDrawing = true;\n        }\n    };\n\n    const draw = ({ nativeEvent }) => {\n        const canvas = canvasRef.current;\n        if (canvas && canvas.isDrawing) {\n            const { offsetX, offsetY } = nativeEvent;\n            const context = canvas.getContext('2d');\n            context.lineTo(offsetX, offsetY);\n            context.stroke();\n        }\n    };\n\n    const stopDrawing = () => {\n        const canvas = canvasRef.current;\n        if (canvas) {\n            const context = canvas.getContext('2d');\n            context.closePath();\n            canvas.isDrawing = false;\n        }\n    };\n\n    return (\n        <canvas\n            ref={canvasRef}\n            width=\"800\"\n            height=\"600\"\n            onMouseDown={startDrawing}\n            onMouseMove={draw}\n            onMouseUp={stopDrawing}\n            onMouseOut={stopDrawing}\n            style={{ border: '2px solid black' }}\n        />\n    );\n};\n\nexport default Canvas;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAMC,SAAS,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMQ,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAID,MAAM,EAAE;MACR,MAAME,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACvCD,OAAO,CAACE,WAAW,GAAGR,KAAK;MAC3BM,OAAO,CAACG,SAAS,GAAGR,KAAK;IAC7B;EACJ,CAAC,EAAE,CAACD,KAAK,EAAEC,KAAK,CAAC,CAAC;EAElB,MAAMS,YAAY,GAAGA,CAAC;IAAEC;EAAY,CAAC,KAAK;IACtC,MAAMP,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAID,MAAM,EAAE;MACR,MAAME,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACvC,MAAM;QAAEK,OAAO;QAAEC;MAAQ,CAAC,GAAGF,WAAW;MACxCL,OAAO,CAACQ,SAAS,CAAC,CAAC;MACnBR,OAAO,CAACS,MAAM,CAACH,OAAO,EAAEC,OAAO,CAAC;MAChCT,MAAM,CAACY,SAAS,GAAG,IAAI;IAC3B;EACJ,CAAC;EAED,MAAMC,IAAI,GAAGA,CAAC;IAAEN;EAAY,CAAC,KAAK;IAC9B,MAAMP,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAID,MAAM,IAAIA,MAAM,CAACY,SAAS,EAAE;MAC5B,MAAM;QAAEJ,OAAO;QAAEC;MAAQ,CAAC,GAAGF,WAAW;MACxC,MAAML,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACvCD,OAAO,CAACY,MAAM,CAACN,OAAO,EAAEC,OAAO,CAAC;MAChCP,OAAO,CAACa,MAAM,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMhB,MAAM,GAAGD,SAAS,CAACE,OAAO;IAChC,IAAID,MAAM,EAAE;MACR,MAAME,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MACvCD,OAAO,CAACe,SAAS,CAAC,CAAC;MACnBjB,MAAM,CAACY,SAAS,GAAG,KAAK;IAC5B;EACJ,CAAC;EAED,oBACIlB,OAAA;IACIwB,GAAG,EAAEnB,SAAU;IACfF,KAAK,EAAC,KAAK;IACXsB,MAAM,EAAC,KAAK;IACZC,WAAW,EAAEd,YAAa;IAC1Be,WAAW,EAAER,IAAK;IAClBS,SAAS,EAAEN,WAAY;IACvBO,UAAU,EAAEP,WAAY;IACxBQ,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CAvDIH,MAAM;AAAAmC,EAAA,GAANnC,MAAM;AAyDZ,eAAeA,MAAM;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}