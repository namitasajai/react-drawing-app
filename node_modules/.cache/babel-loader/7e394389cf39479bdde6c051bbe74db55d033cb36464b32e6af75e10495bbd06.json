{"ast":null,"code":"var _jsxFileName = \"/Users/namitasajai/Desktop/react-drawing-app/src/components/Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [lineColor, setLineColor] = useState('#000000');\n  const [lineWidth, setLineWidth] = useState(3);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.strokeStyle = lineColor;\n    context.lineWidth = lineWidth;\n    context.lineCap = 'round';\n  }, [lineColor, lineWidth]);\n  const startDrawing = ({\n    nativeEvent\n  }) => {\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.beginPath();\n    context.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = ({\n    nativeEvent\n  }) => {\n    if (!isDrawing) {\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    const context = canvasRef.current.getContext('2d');\n    context.lineTo(offsetX, offsetY);\n    context.stroke();\n  };\n  const stopDrawing = () => {\n    const context = canvasRef.current.getContext('2d');\n    context.closePath();\n    setIsDrawing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    onMouseDown: startDrawing,\n    onMouseUp: stopDrawing,\n    onMouseMove: draw,\n    onMouseOut: stopDrawing,\n    ref: canvasRef,\n    width: \"800px\",\n    height: \"600px\",\n    style: {\n      border: '2px solid #000'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Canvas, \"ENgRiJvQgJ0Jib2Ha67DpHuBt6Q=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","lineColor","setLineColor","lineWidth","setLineWidth","canvas","current","context","getContext","strokeStyle","lineCap","startDrawing","nativeEvent","offsetX","offsetY","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","closePath","onMouseDown","onMouseUp","onMouseMove","onMouseOut","ref","width","height","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/namitasajai/Desktop/react-drawing-app/src/components/Canvas.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\n\nconst Canvas = () => {\n    const canvasRef = useRef(null);\n    const [isDrawing, setIsDrawing] = useState(false);\n    const [lineColor, setLineColor] = useState('#000000');\n    const [lineWidth, setLineWidth] = useState(3);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const context = canvas.getContext('2d');\n        context.strokeStyle = lineColor;\n        context.lineWidth = lineWidth;\n        context.lineCap = 'round';\n    }, [lineColor, lineWidth]);\n\n    const startDrawing = ({ nativeEvent }) => {\n        const { offsetX, offsetY } = nativeEvent;\n        const context = canvasRef.current.getContext('2d');\n        context.beginPath();\n        context.moveTo(offsetX, offsetY);\n        setIsDrawing(true);\n    };\n\n    const draw = ({ nativeEvent }) => {\n        if (!isDrawing) {\n            return;\n        }\n        const { offsetX, offsetY } = nativeEvent;\n        const context = canvasRef.current.getContext('2d');\n        context.lineTo(offsetX, offsetY);\n        context.stroke();\n    };\n\n    const stopDrawing = () => {\n        const context = canvasRef.current.getContext('2d');\n        context.closePath();\n        setIsDrawing(false);\n    };\n\n    return (\n        <canvas\n            onMouseDown={startDrawing}\n            onMouseUp={stopDrawing}\n            onMouseMove={draw}\n            onMouseOut={stopDrawing}\n            ref={canvasRef}\n            width=\"800px\"\n            height=\"600px\"\n            style={{ border: '2px solid #000' }}\n        />\n    );\n};\n\nexport default Canvas;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC;EACrD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,MAAMC,OAAO,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACvCD,OAAO,CAACE,WAAW,GAAGR,SAAS;IAC/BM,OAAO,CAACJ,SAAS,GAAGA,SAAS;IAC7BI,OAAO,CAACG,OAAO,GAAG,OAAO;EAC7B,CAAC,EAAE,CAACT,SAAS,EAAEE,SAAS,CAAC,CAAC;EAE1B,MAAMQ,YAAY,GAAGA,CAAC;IAAEC;EAAY,CAAC,KAAK;IACtC,MAAM;MAAEC,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACxC,MAAML,OAAO,GAAGT,SAAS,CAACQ,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAClDD,OAAO,CAACQ,SAAS,CAAC,CAAC;IACnBR,OAAO,CAACS,MAAM,CAACH,OAAO,EAAEC,OAAO,CAAC;IAChCd,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMiB,IAAI,GAAGA,CAAC;IAAEL;EAAY,CAAC,KAAK;IAC9B,IAAI,CAACb,SAAS,EAAE;MACZ;IACJ;IACA,MAAM;MAAEc,OAAO;MAAEC;IAAQ,CAAC,GAAGF,WAAW;IACxC,MAAML,OAAO,GAAGT,SAAS,CAACQ,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAClDD,OAAO,CAACW,MAAM,CAACL,OAAO,EAAEC,OAAO,CAAC;IAChCP,OAAO,CAACY,MAAM,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMb,OAAO,GAAGT,SAAS,CAACQ,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;IAClDD,OAAO,CAACc,SAAS,CAAC,CAAC;IACnBrB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIL,OAAA;IACI2B,WAAW,EAAEX,YAAa;IAC1BY,SAAS,EAAEH,WAAY;IACvBI,WAAW,EAAEP,IAAK;IAClBQ,UAAU,EAAEL,WAAY;IACxBM,GAAG,EAAE5B,SAAU;IACf6B,KAAK,EAAC,OAAO;IACbC,MAAM,EAAC,OAAO;IACdC,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEV,CAAC;AAACrC,EAAA,CAlDID,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}